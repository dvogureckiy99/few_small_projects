Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    main.o(i.Blinking) refers to queue.o(i.xQueueReceive) for xQueueReceive
    main.o(i.Blinking) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    main.o(i.Blinking) refers to main.o(.data) for xQueue
    main.o(i.EXTI10_IRQHandler) refers to queue.o(i.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(i.EXTI10_IRQHandler) refers to main.o(.data) for xSemaphore
    main.o(i.change_mode) refers to queue.o(i.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(i.change_mode) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    main.o(i.change_mode) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    main.o(i.change_mode) refers to main.o(.data) for xQueue
    main.o(i.main) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    main.o(i.main) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    main.o(i.main) refers to tasks.o(i.vTaskStartScheduler) for vTaskStartScheduler
    main.o(i.main) refers to main.o(.data) for xQueue
    main.o(i.main) refers to main.o(i.Blinking) for Blinking
    main.o(i.main) refers to main.o(i.change_mode) for change_mode
    startup_stm32f411xe.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f411xe.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f411xe.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f411xe.o(RESET) refers to startup_stm32f411xe.o(STACK) for __initial_sp
    startup_stm32f411xe.o(RESET) refers to startup_stm32f411xe.o(.text) for Reset_Handler
    startup_stm32f411xe.o(RESET) refers to port.o(.emb_text) for SVC_Handler
    startup_stm32f411xe.o(RESET) refers to port.o(i.SysTick_Handler) for SysTick_Handler
    startup_stm32f411xe.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f411xe.o(.text) refers to system_stm32f4xx.o(i.SystemInit) for SystemInit
    startup_stm32f411xe.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f411xe.o(.text) refers to startup_stm32f411xe.o(HEAP) for Heap_Mem
    startup_stm32f411xe.o(.text) refers to startup_stm32f411xe.o(STACK) for Stack_Mem
    system_stm32f4xx.o(i.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    system_stm32f4xx.o(i.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.constdata) for AHBPrescTable
    heap_1.o(i.pvPortMalloc) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_1.o(i.pvPortMalloc) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_1.o(i.pvPortMalloc) refers to heap_1.o(.data) for pucAlignedHeap
    heap_1.o(i.pvPortMalloc) refers to heap_1.o(.bss) for ucHeap
    heap_1.o(i.vPortInitialiseBlocks) refers to heap_1.o(.data) for xNextFreeByte
    heap_1.o(i.xPortGetFreeHeapSize) refers to heap_1.o(.data) for xNextFreeByte
    port.o(.emb_text) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.emb_text) refers to tasks.o(.data) for pxCurrentTCB
    port.o(i.SysTick_Handler) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    port.o(i.prvTaskExitError) refers to port.o(.data) for uxCriticalNesting
    port.o(i.pxPortInitialiseStack) refers to port.o(i.prvTaskExitError) for prvTaskExitError
    port.o(i.vPortEndScheduler) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortEnterCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortExitCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortSetupTimerInterrupt) refers to port.o(.data) for ulTimerCountsForOneTick
    port.o(i.vPortSuppressTicksAndSleep) refers to tasks.o(i.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(i.vPortSuppressTicksAndSleep) refers to tasks.o(i.vTaskStepTick) for vTaskStepTick
    port.o(i.vPortSuppressTicksAndSleep) refers to port.o(.data) for xMaximumPossibleSuppressedTicks
    port.o(i.vPortValidateInterruptPriority) refers to port.o(.emb_text) for vPortGetIPSR
    port.o(i.vPortValidateInterruptPriority) refers to port.o(.data) for ucMaxSysCallPriority
    port.o(i.xPortStartScheduler) refers to port.o(i.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(i.xPortStartScheduler) refers to port.o(.emb_text) for __asm___6_port_c_39a90d8d__prvEnableVFP
    port.o(i.xPortStartScheduler) refers to port.o(.data) for ucMaxSysCallPriority
    queue.o(i.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(i.prvCopyDataToQueue) refers to tasks.o(i.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(i.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(i.prvInitialiseMutex) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.prvInitialiseNewQueue) refers to queue.o(i.xQueueGenericReset) for xQueueGenericReset
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvNotifyQueueSetContainer) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.prvNotifyQueueSetContainer) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvUnlockQueue) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.vTaskMissedYield) for vTaskMissedYield
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueDelete) refers to heap_1.o(i.vPortFree) for vPortFree
    queue.o(i.xQueueAddToSet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueAddToSet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueCreateCountingSemaphore) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(i.xQueueCreateSet) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueGenericCreate) refers to heap_1.o(i.pvPortMalloc) for pvPortMalloc
    queue.o(i.xQueueGenericCreate) refers to queue.o(i.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReset) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReset) refers to list.o(i.vListInitialise) for vListInitialise
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvIsQueueFull) for prvIsQueueFull
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericSendFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGetMutexHolder) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGetMutexHolder) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGiveFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueueGiveFromISR) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveMutexRecursive) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(i.xQueueGiveMutexRecursive) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueuePeek) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueuePeek) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueuePeek) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueuePeek) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueuePeek) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueuePeekFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueuePeekFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueReceive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueReceive) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueReceive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueReceive) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueReceive) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueReceiveFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueueReceiveFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueRemoveFromSet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueRemoveFromSet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueSelectFromSet) refers to queue.o(i.xQueueReceive) for xQueueReceive
    queue.o(i.xQueueSelectFromSetFromISR) refers to queue.o(i.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(i.xQueueTakeMutexRecursive) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(i.xQueueTakeMutexRecursive) refers to queue.o(i.xQueueSemaphoreTake) for xQueueSemaphoreTake
    tasks.o(i.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss) for xPendingReadyList
    tasks.o(i.eTaskConfirmSleepModeStatus) refers to tasks.o(.data) for xYieldPending
    tasks.o(i.eTaskGetState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.eTaskGetState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.eTaskGetState) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.eTaskGetState) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.pcTaskGetName) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.data) for xTickCount
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(i.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(i.prvAddNewTaskToReadyList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvDeleteTCB) refers to heap_1.o(i.vPortFree) for vPortFree
    tasks.o(i.prvGetExpectedIdleTime) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.prvGetExpectedIdleTime) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvGetExpectedIdleTime) for prvGetExpectedIdleTime
    tasks.o(i.prvIdleTask) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.prvIdleTask) refers to port.o(i.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(i.prvIdleTask) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.prvIdleTask) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvIdleTask) refers to tasks.o(.data) for xNextTaskUnblockTime
    tasks.o(i.prvInitialiseNewTask) refers to aeabi_memset.o(.text) for __aeabi_memset
    tasks.o(i.prvInitialiseNewTask) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    tasks.o(i.prvInitialiseNewTask) refers to port.o(i.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(i.prvInitialiseTaskLists) refers to list.o(i.vListInitialise) for vListInitialise
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvListTasksWithinSingleList) refers to tasks.o(i.vTaskGetInfo) for vTaskGetInfo
    tasks.o(i.prvResetNextTaskUnblockTime) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvTaskIsTaskSuspended) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.pvTaskIncrementMutexHeldCount) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetNumberOfTasks) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskGetStackHighWaterMark) refers to tasks.o(i.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(i.uxTaskGetStackHighWaterMark) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetStackHighWaterMark2) refers to tasks.o(i.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(i.uxTaskGetStackHighWaterMark2) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(i.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.uxTaskPriorityGet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskPriorityGetFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.uxTaskPriorityGetFromISR) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskResetEventItemValue) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelay) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelay) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskDelete) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskDelete) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskDelete) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskEndScheduler) refers to port.o(i.vPortEndScheduler) for vPortEndScheduler
    tasks.o(i.vTaskEndScheduler) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.vTaskGetInfo) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskGetInfo) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskGetInfo) refers to tasks.o(i.eTaskGetState) for eTaskGetState
    tasks.o(i.vTaskGetInfo) refers to tasks.o(i.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(i.vTaskGetInfo) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskInternalSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskMissedYield) refers to tasks.o(.data) for xYieldPending
    tasks.o(i.vTaskNotifyGiveFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskResume) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskResume) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.vTaskResume) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskResume) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskResume) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskResume) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskResume) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    tasks.o(i.vTaskStartScheduler) refers to port.o(i.xPortStartScheduler) for xPortStartScheduler
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(.data) for xIdleTaskHandle
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.prvIdleTask) for prvIdleTask
    tasks.o(i.vTaskStepTick) refers to tasks.o(.data) for xTickCount
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSuspend) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskSuspend) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(i.vTaskSuspend) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskSuspend) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSuspendAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskAbortDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.xTaskAbortDelay) refers to tasks.o(i.eTaskGetState) for eTaskGetState
    tasks.o(i.xTaskAbortDelay) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskAbortDelay) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskAbortDelay) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskAbortDelay) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskAbortDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.xTaskAbortDelay) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.xTaskAbortDelay) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskCreate) refers to heap_1.o(i.pvPortMalloc) for pvPortMalloc
    tasks.o(i.xTaskCreate) refers to heap_1.o(i.vPortFree) for vPortFree
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGenericNotifyFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGetCurrentTaskHandle) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(i.xTaskGetHandle) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.xTaskGetHandle) refers to tasks.o(i.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks.o(i.xTaskGetHandle) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.xTaskGetHandle) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGetHandle) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.xTaskGetIdleTaskHandle) refers to tasks.o(.data) for xIdleTaskHandle
    tasks.o(i.xTaskGetSchedulerState) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.xTaskGetTickCount) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGetTickCountFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.xTaskGetTickCountFromISR) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyStateClear) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskPriorityInherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityInherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskResumeAll) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeAll) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.bss) for xPendingReadyList
    tasks.o(i.xTaskResumeFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset.o(.text) refers to rt_memclr.o(.text) for _memset
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f411xe.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(.rrx_text), (6 bytes).
    Removing main.o(i.EXTI10_IRQHandler), (64 bytes).
    Removing system_stm32f4xx.o(.rev16_text), (4 bytes).
    Removing system_stm32f4xx.o(.revsh_text), (4 bytes).
    Removing system_stm32f4xx.o(.rrx_text), (6 bytes).
    Removing system_stm32f4xx.o(i.SystemCoreClockUpdate), (192 bytes).
    Removing system_stm32f4xx.o(.constdata), (24 bytes).
    Removing system_stm32f4xx.o(.data), (4 bytes).
    Removing heap_1.o(i.vPortInitialiseBlocks), (12 bytes).
    Removing heap_1.o(i.xPortGetFreeHeapSize), (16 bytes).
    Removing port.o(i.vPortEndScheduler), (48 bytes).
    Removing port.o(i.vPortValidateInterruptPriority), (120 bytes).
    Removing queue.o(i.prvInitialiseMutex), (30 bytes).
    Removing queue.o(i.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(i.uxQueueGetQueueNumber), (6 bytes).
    Removing queue.o(i.uxQueueMessagesWaiting), (42 bytes).
    Removing queue.o(i.uxQueueMessagesWaitingFromISR), (34 bytes).
    Removing queue.o(i.uxQueueSpacesAvailable), (48 bytes).
    Removing queue.o(i.vQueueDelete), (38 bytes).
    Removing queue.o(i.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(i.xQueueAddToSet), (38 bytes).
    Removing queue.o(i.xQueueCreateCountingSemaphore), (92 bytes).
    Removing queue.o(i.xQueueCreateMutex), (34 bytes).
    Removing queue.o(i.xQueueCreateSet), (20 bytes).
    Removing queue.o(i.xQueueGenericSendFromISR), (264 bytes).
    Removing queue.o(i.xQueueGetMutexHolder), (28 bytes).
    Removing queue.o(i.xQueueGetMutexHolderFromISR), (38 bytes).
    Removing queue.o(i.xQueueGiveFromISR), (246 bytes).
    Removing queue.o(i.xQueueGiveMutexRecursive), (72 bytes).
    Removing queue.o(i.xQueueIsQueueEmptyFromISR), (42 bytes).
    Removing queue.o(i.xQueueIsQueueFullFromISR), (46 bytes).
    Removing queue.o(i.xQueuePeek), (368 bytes).
    Removing queue.o(i.xQueuePeekFromISR), (176 bytes).
    Removing queue.o(i.xQueueReceiveFromISR), (202 bytes).
    Removing queue.o(i.xQueueRemoveFromSet), (48 bytes).
    Removing queue.o(i.xQueueSelectFromSet), (24 bytes).
    Removing queue.o(i.xQueueSelectFromSetFromISR), (22 bytes).
    Removing queue.o(i.xQueueTakeMutexRecursive), (78 bytes).
    Removing tasks.o(i.eTaskGetState), (148 bytes).
    Removing tasks.o(i.pcTaskGetName), (48 bytes).
    Removing tasks.o(i.prvListTasksWithinSingleList), (106 bytes).
    Removing tasks.o(i.prvSearchForNameWithinSingleList), (176 bytes).
    Removing tasks.o(i.prvTaskCheckFreeStackSpace), (22 bytes).
    Removing tasks.o(i.prvTaskIsTaskSuspended), (88 bytes).
    Removing tasks.o(i.ulTaskNotifyTake), (116 bytes).
    Removing tasks.o(i.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(i.uxTaskGetStackHighWaterMark), (40 bytes).
    Removing tasks.o(i.uxTaskGetStackHighWaterMark2), (40 bytes).
    Removing tasks.o(i.uxTaskGetSystemState), (176 bytes).
    Removing tasks.o(i.uxTaskGetTaskNumber), (14 bytes).
    Removing tasks.o(i.uxTaskPriorityGet), (36 bytes).
    Removing tasks.o(i.uxTaskPriorityGetFromISR), (68 bytes).
    Removing tasks.o(i.uxTaskResetEventItemValue), (28 bytes).
    Removing tasks.o(i.vTaskDelayUntil), (212 bytes).
    Removing tasks.o(i.vTaskDelete), (244 bytes).
    Removing tasks.o(i.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(i.vTaskGetInfo), (132 bytes).
    Removing tasks.o(i.vTaskNotifyGiveFromISR), (240 bytes).
    Removing tasks.o(i.vTaskPlaceOnUnorderedEventList), (108 bytes).
    Removing tasks.o(i.vTaskPrioritySet), (276 bytes).
    Removing tasks.o(i.vTaskRemoveFromUnorderedEventList), (164 bytes).
    Removing tasks.o(i.vTaskResume), (144 bytes).
    Removing tasks.o(i.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(i.vTaskSetTimeOutState), (60 bytes).
    Removing tasks.o(i.vTaskSuspend), (244 bytes).
    Removing tasks.o(i.xTaskAbortDelay), (160 bytes).
    Removing tasks.o(i.xTaskGenericNotify), (300 bytes).
    Removing tasks.o(i.xTaskGenericNotifyFromISR), (360 bytes).
    Removing tasks.o(i.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(i.xTaskGetHandle), (164 bytes).
    Removing tasks.o(i.xTaskGetIdleTaskHandle), (48 bytes).
    Removing tasks.o(i.xTaskGetTickCount), (12 bytes).
    Removing tasks.o(i.xTaskGetTickCountFromISR), (20 bytes).
    Removing tasks.o(i.xTaskNotifyStateClear), (52 bytes).
    Removing tasks.o(i.xTaskNotifyWait), (160 bytes).
    Removing tasks.o(i.xTaskResumeFromISR), (180 bytes).

78 unused section(s) (total 7010 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    C:\Users\ogure\AppData\Local\Arm\Packs\ARM\CMSIS-FreeRTOS\10.3.0\CMSIS\RTOS2\FreeRTOS\Source\freertos_evr.c 0x00000000   Number         0  freertos_evr.o ABSOLUTE
    C:\Users\ogure\AppData\Local\Arm\Packs\ARM\CMSIS-FreeRTOS\10.3.0\Source\list.c 0x00000000   Number         0  list.o ABSOLUTE
    C:\Users\ogure\AppData\Local\Arm\Packs\ARM\CMSIS-FreeRTOS\10.3.0\Source\portable\MemMang\heap_1.c 0x00000000   Number         0  heap_1.o ABSOLUTE
    C:\Users\ogure\AppData\Local\Arm\Packs\ARM\CMSIS-FreeRTOS\10.3.0\Source\portable\RVDS\ARM_CM4F\port.c 0x00000000   Number         0  port.o ABSOLUTE
    C:\Users\ogure\AppData\Local\Arm\Packs\ARM\CMSIS-FreeRTOS\10.3.0\Source\queue.c 0x00000000   Number         0  queue.o ABSOLUTE
    C:\Users\ogure\AppData\Local\Arm\Packs\ARM\CMSIS-FreeRTOS\10.3.0\Source\tasks.c 0x00000000   Number         0  tasks.o ABSOLUTE
    C:\\Users\\ogure\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS-FreeRTOS\\10.3.0\\Source\\portable\\RVDS\\ARM_CM4F\\port.c 0x00000000   Number         0  port.o ABSOLUTE
    RTE\Device\STM32F411RETx\startup_stm32f411xe.s 0x00000000   Number         0  startup_stm32f411xe.o ABSOLUTE
    RTE\Device\STM32F411RETx\system_stm32f4xx.c 0x00000000   Number         0  system_stm32f4xx.o ABSOLUTE
    RTE\\Device\\STM32F411RETx\\system_stm32f4xx.c 0x00000000   Number         0  system_stm32f4xx.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    RESET                                    0x08000000   Section      408  startup_stm32f411xe.o(RESET)
    !!!main                                  0x08000198   Section        8  __main.o(!!!main)
    !!!scatter                               0x080001a0   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x080001d4   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x080001f0   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0800020c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x0800020e   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000212   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000214   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000216   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000216   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000216   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000216   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000216   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000216   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000216   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000218   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000218   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000218   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0800021e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0800021e   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000222   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000222   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800022a   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0800022c   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0800022c   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000230   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x08000238   Section      190  port.o(.emb_text)
    $v0                                      0x08000238   Number         0  port.o(.emb_text)
    .text                                    0x080002f8   Section       64  startup_stm32f411xe.o(.text)
    $v0                                      0x080002f8   Number         0  startup_stm32f411xe.o(.text)
    .text                                    0x08000338   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x080003c2   Section       16  aeabi_memset.o(.text)
    .text                                    0x080003d2   Section        0  heapauxi.o(.text)
    .text                                    0x080003d8   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x0800043c   Section       68  rt_memclr.o(.text)
    .text                                    0x08000480   Section       78  rt_memclr_w.o(.text)
    .text                                    0x080004ce   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x08000518   Section        0  exit.o(.text)
    .text                                    0x0800052c   Section        8  libspace.o(.text)
    .text                                    0x08000534   Section        0  sys_exit.o(.text)
    .text                                    0x08000540   Section        2  use_no_semi.o(.text)
    .text                                    0x08000542   Section        0  indicate_semi.o(.text)
    i.Blinking                               0x08000544   Section        0  main.o(i.Blinking)
    i.SysTick_Handler                        0x08000588   Section        0  port.o(i.SysTick_Handler)
    i.SystemInit                             0x080005bc   Section        0  system_stm32f4xx.o(i.SystemInit)
    i.change_mode                            0x08000620   Section        0  main.o(i.change_mode)
    i.eTaskConfirmSleepModeStatus            0x0800065c   Section        0  tasks.o(i.eTaskConfirmSleepModeStatus)
    i.main                                   0x08000698   Section        0  main.o(i.main)
    i.prvAddCurrentTaskToDelayedList         0x080007ac   Section        0  tasks.o(i.prvAddCurrentTaskToDelayedList)
    prvAddCurrentTaskToDelayedList           0x080007ad   Thumb Code   134  tasks.o(i.prvAddCurrentTaskToDelayedList)
    i.prvAddNewTaskToReadyList               0x08000850   Section        0  tasks.o(i.prvAddNewTaskToReadyList)
    prvAddNewTaskToReadyList                 0x08000851   Thumb Code   156  tasks.o(i.prvAddNewTaskToReadyList)
    i.prvCheckTasksWaitingTermination        0x08000908   Section        0  tasks.o(i.prvCheckTasksWaitingTermination)
    prvCheckTasksWaitingTermination          0x08000909   Thumb Code    60  tasks.o(i.prvCheckTasksWaitingTermination)
    i.prvCopyDataFromQueue                   0x08000950   Section        0  queue.o(i.prvCopyDataFromQueue)
    prvCopyDataFromQueue                     0x08000951   Thumb Code    42  queue.o(i.prvCopyDataFromQueue)
    i.prvCopyDataToQueue                     0x0800097a   Section        0  queue.o(i.prvCopyDataToQueue)
    prvCopyDataToQueue                       0x0800097b   Thumb Code   126  queue.o(i.prvCopyDataToQueue)
    i.prvDeleteTCB                           0x080009f8   Section        0  tasks.o(i.prvDeleteTCB)
    prvDeleteTCB                             0x080009f9   Thumb Code    18  tasks.o(i.prvDeleteTCB)
    i.prvGetDisinheritPriorityAfterTimeout   0x08000a0a   Section        0  queue.o(i.prvGetDisinheritPriorityAfterTimeout)
    prvGetDisinheritPriorityAfterTimeout     0x08000a0b   Thumb Code    20  queue.o(i.prvGetDisinheritPriorityAfterTimeout)
    i.prvGetExpectedIdleTime                 0x08000a20   Section        0  tasks.o(i.prvGetExpectedIdleTime)
    prvGetExpectedIdleTime                   0x08000a21   Thumb Code    56  tasks.o(i.prvGetExpectedIdleTime)
    i.prvIdleTask                            0x08000a6c   Section        0  tasks.o(i.prvIdleTask)
    prvIdleTask                              0x08000a6d   Thumb Code   108  tasks.o(i.prvIdleTask)
    i.prvInitialiseNewQueue                  0x08000ae8   Section        0  queue.o(i.prvInitialiseNewQueue)
    prvInitialiseNewQueue                    0x08000ae9   Thumb Code    46  queue.o(i.prvInitialiseNewQueue)
    i.prvInitialiseNewTask                   0x08000b16   Section        0  tasks.o(i.prvInitialiseNewTask)
    prvInitialiseNewTask                     0x08000b17   Thumb Code   194  tasks.o(i.prvInitialiseNewTask)
    i.prvInitialiseTaskLists                 0x08000bd8   Section        0  tasks.o(i.prvInitialiseTaskLists)
    prvInitialiseTaskLists                   0x08000bd9   Thumb Code    70  tasks.o(i.prvInitialiseTaskLists)
    i.prvIsQueueEmpty                        0x08000c40   Section        0  queue.o(i.prvIsQueueEmpty)
    prvIsQueueEmpty                          0x08000c41   Thumb Code    26  queue.o(i.prvIsQueueEmpty)
    i.prvIsQueueFull                         0x08000c5a   Section        0  queue.o(i.prvIsQueueFull)
    prvIsQueueFull                           0x08000c5b   Thumb Code    30  queue.o(i.prvIsQueueFull)
    i.prvNotifyQueueSetContainer             0x08000c78   Section        0  queue.o(i.prvNotifyQueueSetContainer)
    prvNotifyQueueSetContainer               0x08000c79   Thumb Code   144  queue.o(i.prvNotifyQueueSetContainer)
    i.prvResetNextTaskUnblockTime            0x08000d08   Section        0  tasks.o(i.prvResetNextTaskUnblockTime)
    prvResetNextTaskUnblockTime              0x08000d09   Thumb Code    42  tasks.o(i.prvResetNextTaskUnblockTime)
    i.prvTaskExitError                       0x08000d3c   Section        0  port.o(i.prvTaskExitError)
    prvTaskExitError                         0x08000d3d   Thumb Code    60  port.o(i.prvTaskExitError)
    i.prvUnlockQueue                         0x08000d7c   Section        0  queue.o(i.prvUnlockQueue)
    prvUnlockQueue                           0x08000d7d   Thumb Code   146  queue.o(i.prvUnlockQueue)
    i.pvPortMalloc                           0x08000e10   Section        0  heap_1.o(i.pvPortMalloc)
    i.pvTaskIncrementMutexHeldCount          0x08000e80   Section        0  tasks.o(i.pvTaskIncrementMutexHeldCount)
    i.pxPortInitialiseStack                  0x08000ea0   Section        0  port.o(i.pxPortInitialiseStack)
    i.uxListRemove                           0x08000ecc   Section        0  list.o(i.uxListRemove)
    i.vListInitialise                        0x08000ef4   Section        0  list.o(i.vListInitialise)
    i.vListInitialiseItem                    0x08000f0e   Section        0  list.o(i.vListInitialiseItem)
    i.vListInsert                            0x08000f14   Section        0  list.o(i.vListInsert)
    i.vListInsertEnd                         0x08000f48   Section        0  list.o(i.vListInsertEnd)
    i.vPortEnterCritical                     0x08000f60   Section        0  port.o(i.vPortEnterCritical)
    i.vPortExitCritical                      0x08000fb4   Section        0  port.o(i.vPortExitCritical)
    i.vPortFree                              0x08000ff0   Section        0  heap_1.o(i.vPortFree)
    i.vPortSetupTimerInterrupt               0x08001014   Section        0  port.o(i.vPortSetupTimerInterrupt)
    i.vPortSuppressTicksAndSleep             0x08001054   Section        0  port.o(i.vPortSuppressTicksAndSleep)
    i.vTaskDelay                             0x080011a0   Section        0  tasks.o(i.vTaskDelay)
    i.vTaskInternalSetTimeOutState           0x080011fc   Section        0  tasks.o(i.vTaskInternalSetTimeOutState)
    i.vTaskMissedYield                       0x08001214   Section        0  tasks.o(i.vTaskMissedYield)
    i.vTaskPlaceOnEventList                  0x08001220   Section        0  tasks.o(i.vTaskPlaceOnEventList)
    i.vTaskPriorityDisinheritAfterTimeout    0x08001258   Section        0  tasks.o(i.vTaskPriorityDisinheritAfterTimeout)
    i.vTaskStartScheduler                    0x0800134c   Section        0  tasks.o(i.vTaskStartScheduler)
    i.vTaskStepTick                          0x080013d8   Section        0  tasks.o(i.vTaskStepTick)
    i.vTaskSuspendAll                        0x08001418   Section        0  tasks.o(i.vTaskSuspendAll)
    i.vTaskSwitchContext                     0x08001428   Section        0  tasks.o(i.vTaskSwitchContext)
    i.xPortStartScheduler                    0x080014b4   Section        0  port.o(i.xPortStartScheduler)
    i.xQueueGenericCreate                    0x0800161c   Section        0  queue.o(i.xQueueGenericCreate)
    i.xQueueGenericReset                     0x08001678   Section        0  queue.o(i.xQueueGenericReset)
    i.xQueueGenericSend                      0x08001710   Section        0  queue.o(i.xQueueGenericSend)
    i.xQueueReceive                          0x080018e8   Section        0  queue.o(i.xQueueReceive)
    i.xQueueSemaphoreTake                    0x08001a50   Section        0  queue.o(i.xQueueSemaphoreTake)
    i.xTaskCheckForTimeOut                   0x08001c08   Section        0  tasks.o(i.xTaskCheckForTimeOut)
    i.xTaskCreate                            0x08001cb0   Section        0  tasks.o(i.xTaskCreate)
    i.xTaskGetSchedulerState                 0x08001d10   Section        0  tasks.o(i.xTaskGetSchedulerState)
    i.xTaskIncrementTick                     0x08001d30   Section        0  tasks.o(i.xTaskIncrementTick)
    i.xTaskPriorityDisinherit                0x08001e78   Section        0  tasks.o(i.xTaskPriorityDisinherit)
    i.xTaskPriorityInherit                   0x08001f40   Section        0  tasks.o(i.xTaskPriorityInherit)
    i.xTaskRemoveFromEventList               0x08002008   Section        0  tasks.o(i.xTaskRemoveFromEventList)
    i.xTaskResumeAll                         0x080020a4   Section        0  tasks.o(i.xTaskResumeAll)
    x$fpl$fpinit                             0x080021a8   Section       10  fpinit.o(x$fpl$fpinit)
    $v0                                      0x080021a8   Number         0  fpinit.o(x$fpl$fpinit)
    .data                                    0x20000000   Section        8  main.o(.data)
    .data                                    0x20000008   Section        8  heap_1.o(.data)
    xNextFreeByte                            0x20000008   Data           4  heap_1.o(.data)
    pucAlignedHeap                           0x2000000c   Data           4  heap_1.o(.data)
    .data                                    0x20000010   Section       24  port.o(.data)
    uxCriticalNesting                        0x20000010   Data           4  port.o(.data)
    ulTimerCountsForOneTick                  0x20000014   Data           4  port.o(.data)
    xMaximumPossibleSuppressedTicks          0x20000018   Data           4  port.o(.data)
    ulStoppedTimerCompensation               0x2000001c   Data           4  port.o(.data)
    ucMaxSysCallPriority                     0x20000020   Data           1  port.o(.data)
    ulMaxPRIGROUPValue                       0x20000024   Data           4  port.o(.data)
    .data                                    0x20000028   Section       60  tasks.o(.data)
    pxDelayedTaskList                        0x2000002c   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x20000030   Data           4  tasks.o(.data)
    uxDeletedTasksWaitingCleanUp             0x20000034   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x20000038   Data           4  tasks.o(.data)
    xTickCount                               0x2000003c   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x20000040   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x20000044   Data           4  tasks.o(.data)
    uxPendedTicks                            0x20000048   Data           4  tasks.o(.data)
    xYieldPending                            0x2000004c   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x20000050   Data           4  tasks.o(.data)
    uxTaskNumber                             0x20000054   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x20000058   Data           4  tasks.o(.data)
    xIdleTaskHandle                          0x2000005c   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x20000060   Data           4  tasks.o(.data)
    .bss                                     0x20000064   Section     4096  heap_1.o(.bss)
    ucHeap                                   0x20000064   Data        4096  heap_1.o(.bss)
    .bss                                     0x20001064   Section      200  tasks.o(.bss)
    pxReadyTasksLists                        0x20001064   Data         100  tasks.o(.bss)
    xDelayedTaskList1                        0x200010c8   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x200010dc   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x200010f0   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x20001104   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x20001118   Data          20  tasks.o(.bss)
    .bss                                     0x2000112c   Section       96  libspace.o(.bss)
    HEAP                                     0x20001190   Section      512  startup_stm32f411xe.o(HEAP)
    Heap_Mem                                 0x20001190   Data         512  startup_stm32f411xe.o(HEAP)
    STACK                                    0x20001390   Section     1024  startup_stm32f411xe.o(STACK)
    Stack_Mem                                0x20001390   Data        1024  startup_stm32f411xe.o(STACK)
    __initial_sp                             0x20001790   Data           0  startup_stm32f411xe.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x00000198   Number         0  startup_stm32f411xe.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f411xe.o(RESET)
    __Vectors_End                            0x08000198   Data           0  startup_stm32f411xe.o(RESET)
    __main                                   0x08000199   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080001a1   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080001a1   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080001a1   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080001af   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x080001d5   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x080001f1   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0800020d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x08000215   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000217   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000217   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000217   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000217   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000217   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000217   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000217   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000219   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000219   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000219   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0800021f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0800021f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x08000223   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000223   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800022b   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0800022d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0800022d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000231   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    SVC_Handler                              0x08000239   Thumb Code    28  port.o(.emb_text)
    __asm___6_port_c_39a90d8d__prvStartFirstTask 0x08000259   Thumb Code    36  port.o(.emb_text)
    __asm___6_port_c_39a90d8d__prvEnableVFP  0x08000281   Thumb Code    16  port.o(.emb_text)
    PendSV_Handler                           0x08000295   Thumb Code    88  port.o(.emb_text)
    vPortGetIPSR                             0x080002f1   Thumb Code     6  port.o(.emb_text)
    Reset_Handler                            0x080002f9   Thumb Code     8  startup_stm32f411xe.o(.text)
    NMI_Handler                              0x08000301   Thumb Code     2  startup_stm32f411xe.o(.text)
    HardFault_Handler                        0x08000303   Thumb Code     2  startup_stm32f411xe.o(.text)
    MemManage_Handler                        0x08000305   Thumb Code     2  startup_stm32f411xe.o(.text)
    BusFault_Handler                         0x08000307   Thumb Code     2  startup_stm32f411xe.o(.text)
    UsageFault_Handler                       0x08000309   Thumb Code     2  startup_stm32f411xe.o(.text)
    DebugMon_Handler                         0x0800030d   Thumb Code     2  startup_stm32f411xe.o(.text)
    ADC_IRQHandler                           0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream0_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream1_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream2_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream3_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream4_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream5_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream6_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream7_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream0_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream1_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream2_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream3_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream4_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream5_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream6_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream7_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI0_IRQHandler                         0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI15_10_IRQHandler                     0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI1_IRQHandler                         0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI2_IRQHandler                         0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI3_IRQHandler                         0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI4_IRQHandler                         0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI9_5_IRQHandler                       0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    FLASH_IRQHandler                         0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    FPU_IRQHandler                           0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    I2C1_ER_IRQHandler                       0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    I2C1_EV_IRQHandler                       0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    I2C2_ER_IRQHandler                       0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    I2C2_EV_IRQHandler                       0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    I2C3_ER_IRQHandler                       0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    I2C3_EV_IRQHandler                       0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    OTG_FS_IRQHandler                        0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    PVD_IRQHandler                           0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    RCC_IRQHandler                           0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    RTC_Alarm_IRQHandler                     0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    RTC_WKUP_IRQHandler                      0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    SDIO_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    SPI1_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    SPI2_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    SPI3_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    SPI4_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    SPI5_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    TAMP_STAMP_IRQHandler                    0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM1_BRK_TIM9_IRQHandler                 0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM1_CC_IRQHandler                       0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM1_TRG_COM_TIM11_IRQHandler            0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM1_UP_TIM10_IRQHandler                 0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM2_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM3_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM4_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM5_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    USART1_IRQHandler                        0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    USART2_IRQHandler                        0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    USART6_IRQHandler                        0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    WWDG_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    __user_initial_stackheap                 0x08000315   Thumb Code     0  startup_stm32f411xe.o(.text)
    __aeabi_memcpy                           0x08000339   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x08000339   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x0800039f   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset                           0x080003c3   Thumb Code    16  aeabi_memset.o(.text)
    __use_two_region_memory                  0x080003d3   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080003d5   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080003d7   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x080003d9   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x080003d9   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x080003d9   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x08000421   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr                           0x0800043d   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x0800043d   Thumb Code    68  rt_memclr.o(.text)
    _memset                                  0x08000441   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x08000481   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x08000481   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x08000481   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x08000485   Thumb Code     0  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x080004cf   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x08000519   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x0800052d   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x0800052d   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x0800052d   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08000535   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08000541   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000541   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000543   Thumb Code     0  indicate_semi.o(.text)
    Blinking                                 0x08000545   Thumb Code    60  main.o(i.Blinking)
    SysTick_Handler                          0x08000589   Thumb Code    46  port.o(i.SysTick_Handler)
    SystemInit                               0x080005bd   Thumb Code    82  system_stm32f4xx.o(i.SystemInit)
    change_mode                              0x08000621   Thumb Code    54  main.o(i.change_mode)
    eTaskConfirmSleepModeStatus              0x0800065d   Thumb Code    42  tasks.o(i.eTaskConfirmSleepModeStatus)
    main                                     0x08000699   Thumb Code   228  main.o(i.main)
    pvPortMalloc                             0x08000e11   Thumb Code    98  heap_1.o(i.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x08000e81   Thumb Code    26  tasks.o(i.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x08000ea1   Thumb Code    38  port.o(i.pxPortInitialiseStack)
    uxListRemove                             0x08000ecd   Thumb Code    40  list.o(i.uxListRemove)
    vListInitialise                          0x08000ef5   Thumb Code    26  list.o(i.vListInitialise)
    vListInitialiseItem                      0x08000f0f   Thumb Code     6  list.o(i.vListInitialiseItem)
    vListInsert                              0x08000f15   Thumb Code    52  list.o(i.vListInsert)
    vListInsertEnd                           0x08000f49   Thumb Code    24  list.o(i.vListInsertEnd)
    vPortEnterCritical                       0x08000f61   Thumb Code    76  port.o(i.vPortEnterCritical)
    vPortExitCritical                        0x08000fb5   Thumb Code    56  port.o(i.vPortExitCritical)
    vPortFree                                0x08000ff1   Thumb Code    34  heap_1.o(i.vPortFree)
    vPortSetupTimerInterrupt                 0x08001015   Thumb Code    52  port.o(i.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x08001055   Thumb Code   320  port.o(i.vPortSuppressTicksAndSleep)
    vTaskDelay                               0x080011a1   Thumb Code    82  tasks.o(i.vTaskDelay)
    vTaskInternalSetTimeOutState             0x080011fd   Thumb Code    14  tasks.o(i.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x08001215   Thumb Code     8  tasks.o(i.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x08001221   Thumb Code    52  tasks.o(i.vTaskPlaceOnEventList)
    vTaskPriorityDisinheritAfterTimeout      0x08001259   Thumb Code   230  tasks.o(i.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x0800134d   Thumb Code   110  tasks.o(i.vTaskStartScheduler)
    vTaskStepTick                            0x080013d9   Thumb Code    56  tasks.o(i.vTaskStepTick)
    vTaskSuspendAll                          0x08001419   Thumb Code    12  tasks.o(i.vTaskSuspendAll)
    vTaskSwitchContext                       0x08001429   Thumb Code   118  tasks.o(i.vTaskSwitchContext)
    xPortStartScheduler                      0x080014b5   Thumb Code   330  port.o(i.xPortStartScheduler)
    xQueueGenericCreate                      0x0800161d   Thumb Code    90  queue.o(i.xQueueGenericCreate)
    xQueueGenericReset                       0x08001679   Thumb Code   146  queue.o(i.xQueueGenericReset)
    xQueueGenericSend                        0x08001711   Thumb Code   468  queue.o(i.xQueueGenericSend)
    xQueueReceive                            0x080018e9   Thumb Code   356  queue.o(i.xQueueReceive)
    xQueueSemaphoreTake                      0x08001a51   Thumb Code   434  queue.o(i.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x08001c09   Thumb Code   156  tasks.o(i.xTaskCheckForTimeOut)
    xTaskCreate                              0x08001cb1   Thumb Code    96  tasks.o(i.xTaskCreate)
    xTaskGetSchedulerState                   0x08001d11   Thumb Code    24  tasks.o(i.xTaskGetSchedulerState)
    xTaskIncrementTick                       0x08001d31   Thumb Code   282  tasks.o(i.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x08001e79   Thumb Code   188  tasks.o(i.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x08001f41   Thumb Code   186  tasks.o(i.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x08002009   Thumb Code   132  tasks.o(i.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x080020a5   Thumb Code   224  tasks.o(i.xTaskResumeAll)
    _fp_init                                 0x080021a9   Thumb Code    10  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x080021b1   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x080021b1   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    Region$$Table$$Base                      0x080021b4   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x080021d4   Number         0  anon$$obj.o(Region$$Table)
    xQueue                                   0x20000000   Data           4  main.o(.data)
    xSemaphore                               0x20000004   Data           4  main.o(.data)
    pxCurrentTCB                             0x20000028   Data           4  tasks.o(.data)
    __libspace_start                         0x2000112c   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x2000118c   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080002f9

  Load Region LR_1 (Base: 0x08000000, Size: 0x00002238, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x000021d4, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000198   Data   RO          125    RESET               startup_stm32f411xe.o
    0x08000198   0x08000198   0x00000008   Code   RO         1036  * !!!main             c_w.l(__main.o)
    0x080001a0   0x080001a0   0x00000034   Code   RO         1199    !!!scatter          c_w.l(__scatter.o)
    0x080001d4   0x080001d4   0x0000001a   Code   RO         1201    !!handler_copy      c_w.l(__scatter_copy.o)
    0x080001ee   0x080001ee   0x00000002   PAD
    0x080001f0   0x080001f0   0x0000001c   Code   RO         1203    !!handler_zi        c_w.l(__scatter_zi.o)
    0x0800020c   0x0800020c   0x00000002   Code   RO         1069    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800020e   0x0800020e   0x00000004   Code   RO         1075    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1078    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1081    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1083    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1085    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1088    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1090    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1092    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1094    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1096    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1098    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1100    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1102    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1104    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1106    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1108    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1112    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1114    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1116    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1118    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000002   Code   RO         1119    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08000214   0x08000214   0x00000002   Code   RO         1139    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000216   0x08000216   0x00000000   Code   RO         1152    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000216   0x08000216   0x00000000   Code   RO         1154    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000216   0x08000216   0x00000000   Code   RO         1157    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000216   0x08000216   0x00000000   Code   RO         1160    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000216   0x08000216   0x00000000   Code   RO         1162    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000216   0x08000216   0x00000000   Code   RO         1165    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000216   0x08000216   0x00000002   Code   RO         1166    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000218   0x08000218   0x00000000   Code   RO         1038    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000218   0x08000218   0x00000000   Code   RO         1044    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000218   0x08000218   0x00000006   Code   RO         1056    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800021e   0x0800021e   0x00000000   Code   RO         1046    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x0800021e   0x0800021e   0x00000004   Code   RO         1047    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000222   0x08000222   0x00000000   Code   RO         1049    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000222   0x08000222   0x00000008   Code   RO         1050    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800022a   0x0800022a   0x00000002   Code   RO         1073    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x0800022c   0x0800022c   0x00000000   Code   RO         1121    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x0800022c   0x0800022c   0x00000004   Code   RO         1122    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000230   0x08000230   0x00000006   Code   RO         1123    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x08000236   0x08000236   0x00000002   PAD
    0x08000238   0x08000238   0x000000be   Code   RO          298    .emb_text           port.o
    0x080002f6   0x080002f6   0x00000002   PAD
    0x080002f8   0x080002f8   0x00000040   Code   RO          126  * .text               startup_stm32f411xe.o
    0x08000338   0x08000338   0x0000008a   Code   RO         1030    .text               c_w.l(rt_memcpy_v6.o)
    0x080003c2   0x080003c2   0x00000010   Code   RO         1032    .text               c_w.l(aeabi_memset.o)
    0x080003d2   0x080003d2   0x00000006   Code   RO         1034    .text               c_w.l(heapauxi.o)
    0x080003d8   0x080003d8   0x00000064   Code   RO         1039    .text               c_w.l(rt_memcpy_w.o)
    0x0800043c   0x0800043c   0x00000044   Code   RO         1041    .text               c_w.l(rt_memclr.o)
    0x08000480   0x08000480   0x0000004e   Code   RO         1058    .text               c_w.l(rt_memclr_w.o)
    0x080004ce   0x080004ce   0x0000004a   Code   RO         1060    .text               c_w.l(sys_stackheap_outer.o)
    0x08000518   0x08000518   0x00000012   Code   RO         1062    .text               c_w.l(exit.o)
    0x0800052a   0x0800052a   0x00000002   PAD
    0x0800052c   0x0800052c   0x00000008   Code   RO         1070    .text               c_w.l(libspace.o)
    0x08000534   0x08000534   0x0000000c   Code   RO         1131    .text               c_w.l(sys_exit.o)
    0x08000540   0x08000540   0x00000002   Code   RO         1142    .text               c_w.l(use_no_semi.o)
    0x08000542   0x08000542   0x00000000   Code   RO         1144    .text               c_w.l(indicate_semi.o)
    0x08000542   0x08000542   0x00000002   PAD
    0x08000544   0x08000544   0x00000044   Code   RO            4    i.Blinking          main.o
    0x08000588   0x08000588   0x00000034   Code   RO          299    i.SysTick_Handler   port.o
    0x080005bc   0x080005bc   0x00000064   Code   RO          134    i.SystemInit        system_stm32f4xx.o
    0x08000620   0x08000620   0x0000003c   Code   RO            6    i.change_mode       main.o
    0x0800065c   0x0800065c   0x0000003c   Code   RO          627    i.eTaskConfirmSleepModeStatus  tasks.o
    0x08000698   0x08000698   0x00000114   Code   RO            7    i.main              main.o
    0x080007ac   0x080007ac   0x000000a4   Code   RO          630    i.prvAddCurrentTaskToDelayedList  tasks.o
    0x08000850   0x08000850   0x000000b8   Code   RO          631    i.prvAddNewTaskToReadyList  tasks.o
    0x08000908   0x08000908   0x00000048   Code   RO          632    i.prvCheckTasksWaitingTermination  tasks.o
    0x08000950   0x08000950   0x0000002a   Code   RO          381    i.prvCopyDataFromQueue  queue.o
    0x0800097a   0x0800097a   0x0000007e   Code   RO          382    i.prvCopyDataToQueue  queue.o
    0x080009f8   0x080009f8   0x00000012   Code   RO          633    i.prvDeleteTCB      tasks.o
    0x08000a0a   0x08000a0a   0x00000014   Code   RO          383    i.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x08000a1e   0x08000a1e   0x00000002   PAD
    0x08000a20   0x08000a20   0x0000004c   Code   RO          634    i.prvGetExpectedIdleTime  tasks.o
    0x08000a6c   0x08000a6c   0x0000007c   Code   RO          635    i.prvIdleTask       tasks.o
    0x08000ae8   0x08000ae8   0x0000002e   Code   RO          385    i.prvInitialiseNewQueue  queue.o
    0x08000b16   0x08000b16   0x000000c2   Code   RO          636    i.prvInitialiseNewTask  tasks.o
    0x08000bd8   0x08000bd8   0x00000068   Code   RO          637    i.prvInitialiseTaskLists  tasks.o
    0x08000c40   0x08000c40   0x0000001a   Code   RO          386    i.prvIsQueueEmpty   queue.o
    0x08000c5a   0x08000c5a   0x0000001e   Code   RO          387    i.prvIsQueueFull    queue.o
    0x08000c78   0x08000c78   0x00000090   Code   RO          388    i.prvNotifyQueueSetContainer  queue.o
    0x08000d08   0x08000d08   0x00000034   Code   RO          639    i.prvResetNextTaskUnblockTime  tasks.o
    0x08000d3c   0x08000d3c   0x00000040   Code   RO          300    i.prvTaskExitError  port.o
    0x08000d7c   0x08000d7c   0x00000092   Code   RO          389    i.prvUnlockQueue    queue.o
    0x08000e0e   0x08000e0e   0x00000002   PAD
    0x08000e10   0x08000e10   0x00000070   Code   RO          253    i.pvPortMalloc      heap_1.o
    0x08000e80   0x08000e80   0x00000020   Code   RO          643    i.pvTaskIncrementMutexHeldCount  tasks.o
    0x08000ea0   0x08000ea0   0x0000002c   Code   RO          301    i.pxPortInitialiseStack  port.o
    0x08000ecc   0x08000ecc   0x00000028   Code   RO          202    i.uxListRemove      list.o
    0x08000ef4   0x08000ef4   0x0000001a   Code   RO          203    i.vListInitialise   list.o
    0x08000f0e   0x08000f0e   0x00000006   Code   RO          204    i.vListInitialiseItem  list.o
    0x08000f14   0x08000f14   0x00000034   Code   RO          205    i.vListInsert       list.o
    0x08000f48   0x08000f48   0x00000018   Code   RO          206    i.vListInsertEnd    list.o
    0x08000f60   0x08000f60   0x00000054   Code   RO          303    i.vPortEnterCritical  port.o
    0x08000fb4   0x08000fb4   0x0000003c   Code   RO          304    i.vPortExitCritical  port.o
    0x08000ff0   0x08000ff0   0x00000022   Code   RO          254    i.vPortFree         heap_1.o
    0x08001012   0x08001012   0x00000002   PAD
    0x08001014   0x08001014   0x00000040   Code   RO          305    i.vPortSetupTimerInterrupt  port.o
    0x08001054   0x08001054   0x0000014c   Code   RO          306    i.vPortSuppressTicksAndSleep  port.o
    0x080011a0   0x080011a0   0x0000005c   Code   RO          653    i.vTaskDelay        tasks.o
    0x080011fc   0x080011fc   0x00000018   Code   RO          658    i.vTaskInternalSetTimeOutState  tasks.o
    0x08001214   0x08001214   0x0000000c   Code   RO          659    i.vTaskMissedYield  tasks.o
    0x08001220   0x08001220   0x00000038   Code   RO          661    i.vTaskPlaceOnEventList  tasks.o
    0x08001258   0x08001258   0x000000f4   Code   RO          663    i.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x0800134c   0x0800134c   0x0000008c   Code   RO          669    i.vTaskStartScheduler  tasks.o
    0x080013d8   0x080013d8   0x00000040   Code   RO          670    i.vTaskStepTick     tasks.o
    0x08001418   0x08001418   0x00000010   Code   RO          672    i.vTaskSuspendAll   tasks.o
    0x08001428   0x08001428   0x0000008c   Code   RO          673    i.vTaskSwitchContext  tasks.o
    0x080014b4   0x080014b4   0x00000168   Code   RO          308    i.xPortStartScheduler  port.o
    0x0800161c   0x0800161c   0x0000005a   Code   RO          401    i.xQueueGenericCreate  queue.o
    0x08001676   0x08001676   0x00000002   PAD
    0x08001678   0x08001678   0x00000098   Code   RO          402    i.xQueueGenericReset  queue.o
    0x08001710   0x08001710   0x000001d8   Code   RO          403    i.xQueueGenericSend  queue.o
    0x080018e8   0x080018e8   0x00000168   Code   RO          413    i.xQueueReceive     queue.o
    0x08001a50   0x08001a50   0x000001b8   Code   RO          418    i.xQueueSemaphoreTake  queue.o
    0x08001c08   0x08001c08   0x000000a8   Code   RO          675    i.xTaskCheckForTimeOut  tasks.o
    0x08001cb0   0x08001cb0   0x00000060   Code   RO          676    i.xTaskCreate       tasks.o
    0x08001d10   0x08001d10   0x00000020   Code   RO          682    i.xTaskGetSchedulerState  tasks.o
    0x08001d30   0x08001d30   0x00000148   Code   RO          685    i.xTaskIncrementTick  tasks.o
    0x08001e78   0x08001e78   0x000000c8   Code   RO          688    i.xTaskPriorityDisinherit  tasks.o
    0x08001f40   0x08001f40   0x000000c8   Code   RO          689    i.xTaskPriorityInherit  tasks.o
    0x08002008   0x08002008   0x0000009c   Code   RO          690    i.xTaskRemoveFromEventList  tasks.o
    0x080020a4   0x080020a4   0x00000104   Code   RO          691    i.xTaskResumeAll    tasks.o
    0x080021a8   0x080021a8   0x0000000a   Code   RO         1129    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x080021b2   0x080021b2   0x00000002   PAD
    0x080021b4   0x080021b4   0x00000020   Data   RO         1197    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x080021d4, Size: 0x00000064, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x080021d4   0x00000008   Data   RW            8    .data               main.o
    0x20000008   0x080021dc   0x00000008   Data   RW          258    .data               heap_1.o
    0x20000010   0x080021e4   0x00000018   Data   RW          309    .data               port.o
    0x20000028   0x080021fc   0x0000003c   Data   RW          694    .data               tasks.o


    Execution Region ER_ZI (Exec base: 0x20000064, Load base: 0x08002238, Size: 0x0000172c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000064        -       0x00001000   Zero   RW          257    .bss                heap_1.o
    0x20001064        -       0x000000c8   Zero   RW          693    .bss                tasks.o
    0x2000112c        -       0x00000060   Zero   RW         1071    .bss                c_w.l(libspace.o)
    0x2000118c   0x08002238   0x00000004   PAD
    0x20001190        -       0x00000200   Zero   RW          124    HEAP                startup_stm32f411xe.o
    0x20001390        -       0x00000400   Zero   RW          123    STACK               startup_stm32f411xe.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       146         14          0          8       4096       5183   heap_1.o
       148          0          0          0          0       5234   list.o
       404         62          0          8          0     356227   main.o
      1250         98          0         24          0      12845   port.o
      2094         20          0          0          0      25641   queue.o
        64         26        408          0       1536        880   startup_stm32f411xe.o
       100         18          0          0          0        553   system_stm32f4xx.o
      3308        432          0         60        200      30083   tasks.o

    ----------------------------------------------------------------------
      7524        670        440        100       5832     436646   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        10          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        10          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
       696         16          0          0        100       1064   Library Totals
        10          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       676         16          0          0         96        948   c_w.l
        10          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
       696         16          0          0        100       1064   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      8220        686        440        100       5932     431594   Grand Totals
      8220        686        440        100       5932     431594   ELF Image Totals
      8220        686        440        100          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 8660 (   8.46kB)
    Total RW  Size (RW Data + ZI Data)              6032 (   5.89kB)
    Total ROM Size (Code + RO Data + RW Data)       8760 (   8.55kB)

==============================================================================

